if len(args) == 1:
            self.id = args
        if len (args) == 2:
            (self.id, self.width) = args
        if len (args) == 3:
            (self.id, self.width, self.height) = args
        if len(args) == 4:
            (self.id, self.width, self.height, self.x) = args


[Rectangle] (1) 10/10 - 10/10
[Rectangle] (89) 10/10 - 10/10
[Rectangle] (89) 10/10 - 2/10
[Rectangle] (89) 10/10 - 2/3
[Rectangle] (89) 4/10 - 2/3
[Rectangle] (89) 4/5 - 2/3


[Rectangle] (1) 10/10 - 10/10
[Rectangle] (1) 10/10 - 10/1
[Rectangle] (1) 2/10 - 1/1
[Rectangle] (89) 3/1 - 2/1
[Rectangle] (89) 1/3 - 4/2


#!/usr/bin/python3
""" module rectangle defines class: Square"""
from models.rectangle import Rectangle


class Square(Rectangle):
    """ class Square"""
    def __init__(self, size, x=0, y=0, id=None):
        """It initializes the object from class Square
        args:
        size (int): the size of a square
        x (int): the abscissa
        y (int): the ordinate
        id (int): the id of the object from class square

        Raises:


@property
    def size(self):
        """Get/set the size of a square instance"""
        return self.width

    @size.setter
    def size(self, value):
        self.width = value
        self.height = value



[Square] (1) 0/0 - 5
[Square] (10) 0/0 - 5
[Square] (1) 0/0 - 2
[Square] (1) 3/0 - 2
[Square] (1) 3/4 - 2
[Square] (1) 12/4 - 2
[Square] (1) 12/1 - 7
[Square] (89) 12/1 - 7


Square] (1) 2/1 - 10
{'id': 1, 'x': 2, 'size': 10, 'y': 1}
<class 'dict'>
[Square] (2) 1/0 - 1
[Square] (1) 2/1 - 10
False